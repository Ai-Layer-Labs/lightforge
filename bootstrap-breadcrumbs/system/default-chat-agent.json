{
  "schema_name": "agent.def.v1",
  "title": "Default Chat Assistant",
  "tags": ["agent:def", "workspace:agents", "chat:default", "system:bootstrap"],
  "context": {
    "agent_id": "default-chat-assistant",
    
    "llm_config_id": null,
    "llm_config_comment": "Set to tool.config.v1 breadcrumb ID. Agent will load config from that breadcrumb. Change via Dashboard UI.",
    
    "system_prompt": "You are a helpful AI assistant integrated with the RCRT system.\n\nYou receive pre-assembled context that includes:\n- Relevant conversation history (vector-searched for semantic similarity)\n- Available tools and their usage\n- Recent tool results\n- Browser context (when available)\n\nThe context is already optimized and formatted. Just focus on:\n1. Understanding the user's request\n2. Using available tools when helpful\n3. Providing clear, concise responses\n\nTo invoke tools, respond with valid JSON:\n{\n  \"action\": \"create\",\n  \"breadcrumb\": {\n    \"schema_name\": \"agent.response.v1\",\n    \"title\": \"Chat Response\",\n    \"tags\": [\"agent:response\", \"chat:output\"],\n    \"context\": {\n      \"message\": \"Your response to the user\",\n      \"tool_requests\": [\n        {\n          \"tool\": \"tool-name\",\n          \"input\": {...},\n          \"requestId\": \"unique-id\",\n          \"return_to_llm\": false\n        }\n      ]\n    }\n  }\n}\n\nTOOL RESPONSE HANDLING (YOU CONTROL THIS!):\n- You CHOOSE whether tool results come back to you or go straight to the user\n- Add \"return_to_llm\": true if you want to see the result and add reasoning/formatting\n- Add \"return_to_llm\": false (or omit) if the raw result is good enough\n\nEXAMPLES:\n- Random number → return_to_llm: false (user just needs the number)\n- Random number that needs explaining → return_to_llm: true (you add context)\n- Search results → return_to_llm: true (you need to explain what was found)\n- Calculator → return_to_llm: false (result speaks for itself)\n\nYOU DECIDE based on whether the raw tool output is useful or needs your reasoning!\n\nIMPORTANT: \n- The context you receive is already filtered for relevance\n- Output ONLY the JSON object, no extra text\n- Use tools from the catalog when appropriate",
    
    "capabilities": {
      "can_create_breadcrumbs": true,
      "can_update_own": true,
      "can_delete_own": false,
      "can_spawn_agents": false
    },
    
    "subscriptions": {
      "selectors": [
        {
          "comment": "Pre-built context from context-builder (ONLY trigger - no fallback!)",
          "schema_name": "agent.context.v1",
          "all_tags": ["consumer:default-chat-assistant"],
          "role": "trigger",
          "key": "assembled_context",
          "fetch": {"method": "event_data"}
        },
        {
          "comment": "Current browser page context (fetched when needed)",
          "schema_name": "browser.page.context.v1",
          "any_tags": ["browser:active-tab"],
          "role": "context",
          "key": "browser",
          "fetch": {"method": "latest", "limit": 1}
        },
        {
          "comment": "Available tools catalog",
          "schema_name": "tool.catalog.v1",
          "role": "context",
          "key": "tools",
          "fetch": {"method": "latest", "limit": 1}
        },
        {
          "comment": "Recent conversation history",
          "schema_name": "user.message.v1",
          "any_tags": ["extension:chat"],
          "role": "context",
          "key": "history",
          "fetch": {"method": "recent", "limit": 10}
        },
        {
          "comment": "Tool responses trigger continuation (for LLM responses)",
          "schema_name": "tool.response.v1",
          "all_tags": ["workspace:tools"],
          "context_match": [
            {"path": "$.requestedBy", "op": "eq", "value": "default-chat-assistant"}
          ],
          "role": "trigger",
          "key": "tool_response",
          "fetch": {"method": "event_data"}
        },
        {
          "comment": "Recent tool responses (for context/history)",
          "schema_name": "tool.response.v1",
          "all_tags": ["workspace:tools"],
          "context_match": [
            {"path": "$.requestedBy", "op": "eq", "value": "default-chat-assistant"}
          ],
          "role": "context",
          "key": "tool_results",
          "fetch": {"method": "recent", "limit": 5}
        }
      ]
    },
    
    "metadata": {
      "version": "4.0.0",
      "architecture": "universal-executor",
      "created_by": "system",
      "purpose": "General purpose chat interface with context-builder integration",
      "source_of_truth": "bootstrap-breadcrumbs/system/default-chat-agent.json",
      "features": [
        "Vector-based context assembly",
        "Pre-built context consumption",
        "Browser context awareness",
        "Dynamic tool discovery",
        "Fetch-on-trigger pattern",
        "Configurable LLM via breadcrumb",
        "Zero hardcoding"
      ],
      "configuration_notes": [
        "LLM configured via tool.config.v1 breadcrumb",
        "Change LLM by updating tool:config breadcrumb tag",
        "Supports any LLM tool (openrouter, ollama, custom)",
        "No hardcoded defaults - fully dynamic"
      ]
    }
  }
}